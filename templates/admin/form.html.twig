{% use "EasyAdminBundle:form:bootstrap_4.html.twig" %}

{% block location_widget %}
    <style>
        #description {
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
        }

        #infowindow-content .title {
            font-weight: bold;
        }

        #infowindow-content {
            display: none;
        }

        #map #infowindow-content {
            display: inline;
        }

        .pac-card {
            margin: 10px 10px 0 0;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            background-color: #fff;
            font-family: Roboto;
        }

        #pac-container {
            padding-bottom: 12px;
            margin-right: 12px;
        }

        .pac-controls {
            display: inline-block;
            padding: 5px 11px;
        }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 50%;
        }

        #pac-input:focus {
            border-color: #4d90fe;
        }

        #title {
            color: #fff;
            background-color: #4d90fe;
            font-size: 25px;
            font-weight: 500;
            padding: 6px 12px;
        }

        #target {
            width: 345px;
        }
    </style>
    <div class="row" style="margin-top: 2rem;">
        <div class="col-12">
            <h1 class="text-center">Location</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-8 offset-2" style="margin-top: 1rem">
            <input id="pac-input" class="form-control" type="text" placeholder="Search place">
            <div id="map" style="width: 100%; height: 30rem;"></div>
            <input type="hidden" name="location" id="location" value="{{ form.vars.location }}" required>
        </div>
    </div>
    <script>
        var map;
        var marker;

        function initMap() {
            var latLon = $('#location').val().split(',');
            var lat = parseFloat(latLon[0]);
            var lng = parseFloat(latLon[1]);
            if (lat && lng) {
                placeMarker(lat, lng, 15);
            }

            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: lat || 47.039624, lng: lng || 8.3188383},
                zoom: 8
            });

            // Create the search box and link it to the UI element.
            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function () {
                searchBox.setBounds(map.getBounds());
            });

            var markers = [];

            $('form').on('keypress', function (e) {
                //Enter key
                if (e.which == 13) {
                    return false;
                }
            });
            // Listen for the event fired when the user selects a prediction and retrieve
            // more details for that place.
            searchBox.addListener('places_changed', function () {
                var places = searchBox.getPlaces();

                if (places.length === 0) {
                    return;
                }

                // Clear out the old markers.
                markers.forEach(function (marker) {
                    marker.setMap(null);
                });
                markers = [];

                // For each place, get the icon, name and location.
                var place = places[places.length - 1];
                if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                }

                // Create a marker for each place.
                var loc = place.geometry.location;
                placeMarker(loc.lat, loc.lng);
            });

            map.addListener("click", function (event) {
                var loc = event.latLng;
                // display the lat/lng in your form's lat/lng fields
                placeMarker(loc.lat(), loc.lng());
            });

            function placeMarker(lat, lng, zoom) {
                zoom = zoom || 16;
                if (marker) {
                    marker.setMap(null);
                }
                marker = new google.maps.Marker({
                    position: {lat: lat, lng: lng},
                    map: map
                });
                map.setZoom(zoom);
                map.setCenter(marker.getPosition());
                document.getElementById("location").value = lat + ',' + lng;
            }
        }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC7ybIOBRNNWX43TsNSUj20WzH4q4lFhVM&libraries=places&callback=initMap"
            async defer>
    </script>
{% endblock %}

{% block event_teams_widget %}
    <style>
        .hidden {
            display: none;
        }
    </style>
    <script>
        $(function () {
            var registerHandlers = function () {
                // Multiselector logic
                $('[multiselector]').on('click', function () {
                    var isChecked = $(this).prop('checked');
                    $('[team-enabled]').prop('checked', isChecked);
                });


                // Toggle logic
                var allSame = $('#all-same');
                var toggle = function (checkbox) {
                    var isChecked = $(checkbox).prop('checked');
                    var teams = $('[data-teams]');
                    var comment = $('[comment]');
                    if (isChecked) {
                        teams.addClass('hidden');
                        comment.removeClass('hidden');
                    } else {
                        teams.removeClass('hidden');
                        comment.addClass('hidden');
                    }
                };
                allSame.on('click change', function () {
                    toggle(this);
                });
                if (allSame.prop('checked')) {
                    toggle(allSame);
                }

                // On arrival input
                $('[arrival]').on('input cut copy paste', function () {
                    var value = $(this).val();
                    $('[team-arrival]').val(value);
                });
                // On departure input
                $('[departure]').on('input cut copy paste', function () {
                    var value = $(this).val();
                    $('[team-departure]').val(value);
                });
            };
            var getTeams = function (waveId) {
                $('[data-teams]').html('<div class="row col-3 offset-2">Loading...</div>');
                $.ajax({
                    method: 'GET',
                    contentType: 'application/json',
                    url: '/waves/' + waveId + '/teams',
                    xhrFields: {
                        withCredentials: true,
                    },
                }).done(function (teams) {
                    var html = `
                        <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                            <div class="col-3 offset-2">
                                <input type="checkbox"
                                       id="multiselector"
                                       class="form-check-inline" multiselector>
                                    <label for="multiselector">Select all</label>
                                </div>
                            </div>
                        </div>
                    `;
                    $.each(teams, function (_, team) {
                        html += `
                            <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                                <div class="col-3 offset-2">
                                    <input type="checkbox"
                                           id="team-enabled-${team['id']}"
                                           class="form-check-inline"
                                           name="team[${team['id']}][enabled]"
                                           team-enabled>
                                    <label for="team-enabled-${team['id']}">${team['name']} (${team['start_number']})</label>
                                </div>
                                <div class="col-2">
                                    <input type="time" class="form-control" name="team[${team['id']}][arrival]" team-arrival>
                                </div>
                                <div class="col-2">
                                    <input type="time" class="form-control" name="team[${team['id']}][departure]" team-departure>
                                </div>
                            </div>
                        `
                    });
                    $('[data-teams]').html(html);

                    // Multiselector logic
                    $('[multiselector]').on('click', function () {
                        var isChecked = $(this).prop('checked');
                        $('[team-enabled]').prop('checked', isChecked);
                    });


                    // Toggle logic
                    var allSame = $('#all-same');
                    var toggle = function (checkbox) {
                        var isChecked = $(checkbox).prop('checked');
                        var teams = $('[data-teams]');
                        var arrival = $('[arrival]');
                        var departure = $('[departure]');
                        if (isChecked) {
                            teams.addClass('hidden');
                            arrival.removeClass('hidden');
                            departure.removeClass('hidden');
                        } else {
                            teams.removeClass('hidden');
                            arrival.addClass('hidden');
                            departure.addClass('hidden');
                        }
                    };
                    allSame.on('click change', function () {
                        toggle(this);
                    });
                    if (allSame.prop('checked')) {
                        toggle(allSame);
                    }

                    // On arrival input
                    $('[arrival]').on('input cut copy paste', function () {
                        var value = $(this).val();
                        $('[team-arrival]').val(value);
                    });
                    // On departure input
                    $('[departure]').on('input cut copy paste', function () {
                        var value = $(this).val();
                        $('[team-departure]').val(value);
                    });
                });
            };
            var wave = $('[data-wave]');
            wave.on('change', function () {
                var val = $(this).val();
                getTeams(val);
            });
            if ($('[data-teams]').children().length <= 0) {
                // Only load teams if teams are not rendered in the backend
                getTeams(wave.val());
            }
            registerHandlers();
        });
    </script>
    <div class="row" style="margin-top: 2rem;">
        <div class="col-12">
            <h1 class="text-center">Teams</h1>
        </div>
    </div>

    <div class="col-8 offset-2">
        {{ form_widget(form.wave, {'attr': {'data-wave': ''}}) }}
    </div>

    <div class="row" style="margin-top: 2rem;line-height: 1.6rem;">
        <div class="col-4 offset-1">
            <input type="checkbox"
                   id="all-same"
                   class="form-check-inline"
                   name="same-for-all"
                    {{ form.vars.teams is empty ? 'checked' : '' }}>
            <label for="all-same">For all teams the same time</label>
        </div>
        <div class="col-2">
            <input type="time" class="form-control" name="arrival" arrival>
        </div>
        <div class="col-2">
            <input type="time" class="form-control" name="departure" departure>
        </div>
    </div>

    <div data-teams>
        {% if form.vars.teams is not empty %}
            <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                <div class="col-3 offset-2">
                    <input type="checkbox" id="multiselector" class="form-check-inline" multiselector>
                    <label for="multiselector">Select all</label>
                </div>
            </div>
            {% for team in form.vars.teams %}
                <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                    <div class="col-3 offset-2" style="line-height: 2rem;">
                        <input type="checkbox" id="team-enabled-{{ team.id }}" class="form-check-inline"
                               name="team[{{ team.id }}][enabled]" {{ team.enabled ? 'checked' : '' }} team-enabled>
                        <label for="team-enabled-{{ team.id }}">{{ team.name }}</label>
                    </div>
                    <div class="col-2">
                        <input type="time"
                               class="form-control"
                               name="team[{{ team.id }}][arrival]"
                               value="{{ team.arrival }}"
                               team-arrival>
                    </div>
                    <div class="col-2">
                        <input type="time"
                               class="form-control"
                               name="team[{{ team.id }}][departure]"
                               value="{{ team.departure }}"
                               team-departure>
                    </div>
                </div>
            {% endfor %}
        {% endif %}
    </div>
{% endblock %}

{% block hotel_teams_widget %}
    <style>
        .hidden {
            display: none;
        }
    </style>
    <script>
        $(function () {
            var registerHandlers = function () {
                // Multiselector logic
                $('[multiselector]').on('click', function () {
                    var isChecked = $(this).prop('checked');
                    $('[team-enabled]').prop('checked', isChecked);
                });


                // Toggle logic
                var allSame = $('#all-same');
                var toggle = function (checkbox) {
                    var isChecked = $(checkbox).prop('checked');
                    var teams = $('[data-teams]');
                    var comment = $('[comment]');
                    if (isChecked) {
                        teams.addClass('hidden');
                        comment.removeClass('hidden');
                    } else {
                        teams.removeClass('hidden');
                        comment.addClass('hidden');
                    }
                };
                allSame.on('click change', function () {
                    toggle(this);
                });
                if (allSame.prop('checked')) {
                    toggle(allSame);
                }

                // On comment input
                $('[comment]').on('input cut copy paste', function () {
                    var value = $(this).val();
                    $('[team-comment]').val(value);
                });
            };
            var getTeams = function getTeams(waveId) {
                $('[data-teams]').html('<div class="row col-3 offset-2">Loading...</div>');
                $.ajax({
                    method: 'GET',
                    contentType: 'application/json',
                    url: '/waves/' + waveId + '/teams',
                    xhrFields: {
                        withCredentials: true
                    }
                }).done(function (teams) {
                        // Template logic
                        var html = `
                                <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                                    <div class="col-3 offset-2">
                                        <input type="checkbox" id="multiselector" class="form-check-inline" multiselector>
                                        <label for="multiselector">Select all</label>
                                    </div>
                                </div>`;
                        $.each(teams, function (_, team) {
                            html += `
                            <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                                <div class="col-3 offset-2" style="line-height: 2rem;">
                                    <input type="checkbox" id="team-enabled-${team['id']}" class="form-check-inline" name="team[${team['id']}][enabled]" team-enabled>
                                    <label for="team-enabled-${team['id']}">${team['name']} (${team['start_number']})</label>
                                </div>
                                <div class="col-7">
                                    <input type="text" id="team-comment-${team['id']}" class="form-control" name="team[${team['id']}][comment]" placeholder="Comment" team-comment>
                                </div>
                            </div>`;
                        });
                        $('[data-teams]').html(html);
                        registerHandlers();
                    }
                );
            };
            var wave = $('[data-wave]');
            wave.on('change', function () {
                var val = $(this).val();
                getTeams(val);
            });
            if ($('[data-teams]').children().length <= 0) {
                // Only load teams if teams are not rendered in the backend
                getTeams(wave.val());
            }
            registerHandlers();
        })
        ;
    </script>
    <div class="row" style="margin-top: 2rem;line-height: 1.6rem;">
        <div class="col-12">
            <h1 class="text-center">Teams</h1>
        </div>
    </div>

    <div class="col-8 offset-2">
        {{ form_widget(form.wave, {'attr': {'data-wave': ''}}) }}
    </div>

    <div class="row" style="margin-top: 2rem;line-height: 1.6rem;">
        <div class="col-4 offset-1">
            <input type="checkbox"
                   id="all-same"
                   class="form-check-inline"
                   name="same-for-all"
                    {{ form.vars.teams is empty ? 'checked' : '' }}>
            <label for="all-same">For all teams the same</label>
        </div>
        <div class="col-7">
            <input type="text" class="form-control" name="comment" comment>
        </div>
    </div>

    <div data-teams>
        {% if form.vars.teams is not empty %}
            <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                <div class="col-3 offset-2">
                    <input type="checkbox" id="multiselector" class="form-check-inline" multiselector>
                    <label for="multiselector">Select all</label>
                </div>
            </div>
            {% for team in form.vars.teams %}
                <div class="row" style="margin-top: 1rem;line-height: 1.6rem;">
                    <div class="col-3 offset-2" style="line-height: 2rem;">
                        <input type="checkbox" id="team-enabled-{{ team.id }}" class="form-check-inline"
                               name="team[{{ team.id }}][enabled]" {{ team.enabled ? 'checked' : '' }} team-enabled>
                        <label for="team-enabled-{{ team.id }}">{{ team.name }}</label>
                    </div>
                    <div class="col-7">
                        <input type="text" id="team-comment-{{ team.id }}" class="form-control"
                               name="team[{{ team.id }}][comment]"
                               placeholder="Comment" value="{{ team.comment }}" team-comment>
                    </div>
                </div>
            {% endfor %}
        {% endif %}
    </div>
{% endblock %}

{% block event_activities_widget %}
    <script src="{{ asset('js/event-activities-widget.js') }}"></script>
    <div class="row" style="margin-top: 2rem;line-height: 1.6rem;">
        <div class="col-12">
            <h1 class="text-center">Activities</h1>
        </div>
    </div>

    <div class="row" style="margin-top: 2rem;line-height: 1.6rem;">
        <input type="hidden" data-activity-id value="">
        <div class="col-2 offset-2">
            <label for="new-activity_start">Start</label>
            <input type="time"
                   id="new-activity_start"
                   class="form-control"
                   formnovalidate
                   new-activity-start>
        </div>
        <div class="col-2">
            <label for="new-activity_end">End</label>
            <input type="time"
                   id="new-activity_end"
                   class="form-control"
                   formnovalidate
                   new-activity-end>
        </div>
        <div class="col-4">
            <label for="new-activity_title">Title</label>
            <input type="text" id="new-activity_title" class="form-control" new-activity-title>
        </div>
    </div>
    <div class="row">
        <div class="col-8 offset-2">
            <errors></errors>
        </div>
    </div>
    <div class="row" style="margin-top: 2rem;line-height: 1.6rem;">
        <div class="col-8 offset-2">
            <label for="new-activity_description">Description (optional)</label>
            <textarea rows="2" id="new-activity_description" class="form-control" new-activity-description></textarea>
        </div>
    </div>
    <div class="row" style="margin-top: 2rem;line-height: 1.6rem;">
        <div class="col-3 offset-7">
            <button type="button" class="btn btn-block btn-primary" add-activity>Add Activity</button>
        </div>
    </div>

    <div data-activities>
        {% if form.vars.event_activities %}
            {% for activity in form.vars.event_activities %}
                <div class="row" activity activity-{{ activity.id }} style="margin-top: 1rem">
                    <div class=" col-8 offset-2">
                        <div class="row">
                            <div class="col-8">
                                <h5 class="d-inline">{{ activity.title }}</h5>
                                <h6 class="d-inline" style="margin-left: 1rem;">{{ activity.start }}
                                    - {{ activity.end }}</h6>
                            </div>
                            <div class="col-4 row">
                                <div class="col-6">
                                    <button type="button" class="btn btn-primary" edit="{{ activity.id }}">Edit</button>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-danger" delete="{{ activity.id }}">Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                        {% if activity.description is not empty %}
                            <div class="row col-12" style="margin-top: .5rem">
                                <div class="row col-12" style="margin-top: .5rem">{{ activity.description }}</div>
                            </div>
                        {% endif %}
                        <input type="hidden"
                               name="activities[{{ activity.id }}][id]"
                               activity-id-{{ activity.id }}
                               value="{{ activity.id }}">
                        <input type="hidden"
                               name="activities[{{ activity.id }}][title]"
                               activity-title-{{ activity.id }}
                               value="{{ activity.title }}">
                        <input type="hidden"
                               name="activities[{{ activity.id }}][start]"
                               activity-start-{{ activity.id }}
                               value="{{ activity.start }}">
                        <input type="hidden"
                               name="activities[{{ activity.id }}][end]"
                               activity-end-{{ activity.id }}
                               value="{{ activity.end }}">
                        <input type="hidden"
                               name="activities[{{ activity.id }}][description]"
                               activity-description-{{ activity.id }}
                               value="{{ activity.description }}">
                    </div>
                </div>
            {% endfor %}
        {% endif %}
    </div>
{% endblock %}
