security:
  encoders:
    FOS\UserBundle\Model\UserInterface: bcrypt

  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: ROLE_ADMIN

  providers:
    fos_userbundle:
      id: fos_user.user_provider.username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    auth_login:
      pattern:  ^/auth
      stateless: true
      anonymous: true

      form_login:
        check_path:                     /auth/login_check
        success_handler:                lexik_jwt_authentication.handler.authentication_success
        failure_handler:                lexik_jwt_authentication.handler.authentication_failure
        require_previous_session:       false
        always_use_default_target_path: true
        default_target_path:            easyadmin
        use_referer:                    true

      json_login:
        check_path:      /auth/login
        username_path:   username
        password_path:   password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern:    ^/api
      stateless:  true
      anonymous:  true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

    main:
      pattern: ^/
      form_login:
        provider: fos_userbundle
        csrf_token_generator: security.csrf.token_manager

      logout:       true
      anonymous:    true

  access_control:
    - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/auth$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/docs$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api$, roles: [ IS_AUTHENTICATED_FULLY ] }
    - { path: ^/admin$, role: ROLE_ADMIN }
    - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }